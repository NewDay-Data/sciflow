# AUTOGENERATED! DO NOT EDIT! File to edit: ../../test_export.ipynb.

# %% auto 0
__all__ = ['some_params', 'some_param', 'input_path', 'model_path', 'source_in_docs', 'first', 'function', 'preprocess', 'train',
           'last']

# %% ../../test_export.ipynb 2
# | export

from pathlib import Path

# %% ../../test_export.ipynb 3
# | export

# TODO: only dealing with simple params for now - scalars & string values
some_params = len([1, 2, 3])
some_param = "test"
input_path = str(Path(".").resolve())
model_path = str(Path(".").resolve().parent)

# %% ../../test_export.ipynb 4
# | export_step first
# irrelevant comment


def first(some_params: int):
    """
    This the entrypoint.

    :param some_params: this is a first param
    :returns: this is a description of what is returned
    """
    print(some_params)

# %% ../../test_export.ipynb 5
# | export
# some other comment


def function():
    results = {"foo": 1}
    return results

# %% ../../test_export.ipynb 7
# | exporti

internal = True

# %% ../../test_export.ipynb 12
# | export_step preprocess


def preprocess(input_path: str):
    """Pre-process the input data"""
    import time

    print(f"Preprocessing input data from {input_path}...")
    time.sleep(1)

# %% ../../test_export.ipynb 14
# | exports

source_in_docs = True

# %% ../../test_export.ipynb 15
# | export
import time

time.sleep(1)

# %% ../../test_export.ipynb 17
# | export
import time

time.sleep(3)

# %% ../../test_export.ipynb 18
# | export_step train


def train(input_path: str, model_path: str):
    """Train the model"""
    import time

    print(f"Training {model_path} on {input_path}...")
    time.sleep(1)

# %% ../../test_export.ipynb 26
# | export_step last


def last():
    """
    Clean up and close connections"""
    one = {"one": 1}
    return one
