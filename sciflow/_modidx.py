# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/sciflow/',
                'doc_host': 'https://newdaytechnology.github.io',
                'git_url': 'https://github.com/newdaytechnology/sciflow/tree/{branch}/',
                'lib_path': 'sciflow'},
  'syms': { 'sciflow.converters.to_metaflow': { 'sciflow.converters.to_metaflow.format_arg': ( 'converters/to_metaflow.html#format_arg',
                                                                                               'sciflow/converters/to_metaflow.py'),
                                                'sciflow.converters.to_metaflow.generate_flows': ( 'converters/to_metaflow.html#generate_flows',
                                                                                                   'sciflow/converters/to_metaflow.py'),
                                                'sciflow.converters.to_metaflow.nb_to_metaflow': ( 'converters/to_metaflow.html#nb_to_metaflow',
                                                                                                   'sciflow/converters/to_metaflow.py'),
                                                'sciflow.converters.to_metaflow.rename_steps_for_metaflow': ( 'converters/to_metaflow.html#rename_steps_for_metaflow',
                                                                                                              'sciflow/converters/to_metaflow.py'),
                                                'sciflow.converters.to_metaflow.sciflow_metaflow': ( 'converters/to_metaflow.html#sciflow_metaflow',
                                                                                                     'sciflow/converters/to_metaflow.py'),
                                                'sciflow.converters.to_metaflow.write_module_to_file': ( 'converters/to_metaflow.html#write_module_to_file',
                                                                                                         'sciflow/converters/to_metaflow.py'),
                                                'sciflow.converters.to_metaflow.write_params': ( 'converters/to_metaflow.html#write_params',
                                                                                                 'sciflow/converters/to_metaflow.py'),
                                                'sciflow.converters.to_metaflow.write_steps': ( 'converters/to_metaflow.html#write_steps',
                                                                                                'sciflow/converters/to_metaflow.py'),
                                                'sciflow.converters.to_metaflow.write_track_capture': ( 'converters/to_metaflow.html#write_track_capture',
                                                                                                        'sciflow/converters/to_metaflow.py')},
            'sciflow.converters.to_sagemaker': { 'sciflow.converters.to_sagemaker.extract_step_vars': ( 'converters/to_sagemaker.html#extract_step_vars',
                                                                                                        'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.format_arg': ( 'converters/to_sagemaker.html#format_arg',
                                                                                                 'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.format_args': ( 'converters/to_sagemaker.html#format_args',
                                                                                                  'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.format_hyperparams': ( 'converters/to_sagemaker.html#format_hyperparams',
                                                                                                         'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.format_job_arguments': ( 'converters/to_sagemaker.html#format_job_arguments',
                                                                                                           'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.generate_flows': ( 'converters/to_sagemaker.html#generate_flows',
                                                                                                     'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.generate_sagemaker_modules': ( 'converters/to_sagemaker.html#generate_sagemaker_modules',
                                                                                                                 'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.is_processing_step': ( 'converters/to_sagemaker.html#is_processing_step',
                                                                                                         'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.is_train_step': ( 'converters/to_sagemaker.html#is_train_step',
                                                                                                    'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.nb_to_sagemaker_pipeline': ( 'converters/to_sagemaker.html#nb_to_sagemaker_pipeline',
                                                                                                               'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.sciflow_sagemaker': ( 'converters/to_sagemaker.html#sciflow_sagemaker',
                                                                                                        'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.set_sm_params': ( 'converters/to_sagemaker.html#set_sm_params',
                                                                                                    'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.write_params': ( 'converters/to_sagemaker.html#write_params',
                                                                                                   'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.write_pipeline_to_files': ( 'converters/to_sagemaker.html#write_pipeline_to_files',
                                                                                                              'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.write_preamble': ( 'converters/to_sagemaker.html#write_preamble',
                                                                                                     'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.write_script_processor': ( 'converters/to_sagemaker.html#write_script_processor',
                                                                                                             'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.write_sm_params': ( 'converters/to_sagemaker.html#write_sm_params',
                                                                                                      'sciflow/converters/to_sagemaker.py'),
                                                 'sciflow.converters.to_sagemaker.write_steps': ( 'converters/to_sagemaker.html#write_steps',
                                                                                                  'sciflow/converters/to_sagemaker.py')},
            'sciflow.export_step': { 'sciflow.export_step.ExportModuleProc': ( 'export_step.html#exportmoduleproc',
                                                                               'sciflow/export_step.py'),
                                     'sciflow.export_step.ExportModuleProc._default_exp_': ( 'export_step.html#exportmoduleproc._default_exp_',
                                                                                             'sciflow/export_step.py'),
                                     'sciflow.export_step.ExportModuleProc._export_': ( 'export_step.html#exportmoduleproc._export_',
                                                                                        'sciflow/export_step.py'),
                                     'sciflow.export_step.ExportModuleProc._export_step_': ( 'export_step.html#exportmoduleproc._export_step_',
                                                                                             'sciflow/export_step.py'),
                                     'sciflow.export_step.ExportModuleProc._exporti_': ( 'export_step.html#exportmoduleproc._exporti_',
                                                                                         'sciflow/export_step.py'),
                                     'sciflow.export_step.ExportModuleProc.begin': ( 'export_step.html#exportmoduleproc.begin',
                                                                                     'sciflow/export_step.py'),
                                     'sciflow.export_step.nb_named_export': ('export_step.html#nb_named_export', 'sciflow/export_step.py'),
                                     'sciflow.export_step.optional_procs': ('export_step.html#optional_procs', 'sciflow/export_step.py'),
                                     'sciflow.export_step.sciflow_export': ('export_step.html#sciflow_export', 'sciflow/export_step.py')},
            'sciflow.init': { 'sciflow.init.edit_pythonpath': ('init.html#edit_pythonpath', 'sciflow/init.py'),
                              'sciflow.init.read_env_file': ('init.html#read_env_file', 'sciflow/init.py'),
                              'sciflow.init.sciflow_init': ('init.html#sciflow_init', 'sciflow/init.py'),
                              'sciflow.init.write_edited_pythonpath': ('init.html#write_edited_pythonpath', 'sciflow/init.py'),
                              'sciflow.init.write_env_file': ('init.html#write_env_file', 'sciflow/init.py')},
            'sciflow.packaging': { 'sciflow.packaging.create_conda_meta_file': ( 'packaging.html#create_conda_meta_file',
                                                                                 'sciflow/packaging.py'),
                                   'sciflow.packaging.delete_multiple_element': ( 'packaging.html#delete_multiple_element',
                                                                                  'sciflow/packaging.py'),
                                   'sciflow.packaging.determine_dependencies': ( 'packaging.html#determine_dependencies',
                                                                                 'sciflow/packaging.py'),
                                   'sciflow.packaging.read_deploy_vars': ('packaging.html#read_deploy_vars', 'sciflow/packaging.py'),
                                   'sciflow.packaging.reqs_file_to_sep_str': ( 'packaging.html#reqs_file_to_sep_str',
                                                                               'sciflow/packaging.py'),
                                   'sciflow.packaging.reqs_lines_to_sep_str': ( 'packaging.html#reqs_lines_to_sep_str',
                                                                                'sciflow/packaging.py'),
                                   'sciflow.packaging.run_py_module': ('packaging.html#run_py_module', 'sciflow/packaging.py'),
                                   'sciflow.packaging.sciflow_prepare': ('packaging.html#sciflow_prepare', 'sciflow/packaging.py'),
                                   'sciflow.packaging.sciflow_update_reqs': ('packaging.html#sciflow_update_reqs', 'sciflow/packaging.py'),
                                   'sciflow.packaging.update_requirements': ('packaging.html#update_requirements', 'sciflow/packaging.py'),
                                   'sciflow.packaging.write_art_conda_envs_to_file': ( 'packaging.html#write_art_conda_envs_to_file',
                                                                                       'sciflow/packaging.py')},
            'sciflow.params': { 'sciflow.params.ParamMeta': ('params.html#parammeta', 'sciflow/params.py'),
                                'sciflow.params._lines_to_dict': ('params.html#_lines_to_dict', 'sciflow/params.py'),
                                'sciflow.params.add_missing_params_cell': ('params.html#add_missing_params_cell', 'sciflow/params.py'),
                                'sciflow.params.extract_as_files': ('params.html#extract_as_files', 'sciflow/params.py'),
                                'sciflow.params.extract_param_meta': ('params.html#extract_param_meta', 'sciflow/params.py'),
                                'sciflow.params.extract_params': ('params.html#extract_params', 'sciflow/params.py'),
                                'sciflow.params.extract_params_as_dict': ('params.html#extract_params_as_dict', 'sciflow/params.py'),
                                'sciflow.params.extract_params_to_file': ('params.html#extract_params_to_file', 'sciflow/params.py'),
                                'sciflow.params.find_params_cell': ('params.html#find_params_cell', 'sciflow/params.py'),
                                'sciflow.params.list_mod_files': ('params.html#list_mod_files', 'sciflow/params.py'),
                                'sciflow.params.load_module': ('params.html#load_module', 'sciflow/params.py'),
                                'sciflow.params.params_as_dict': ('params.html#params_as_dict', 'sciflow/params.py')},
            'sciflow.parse_module': { 'sciflow.parse_module.FuncDetails': ('parse_module.html#funcdetails', 'sciflow/parse_module.py'),
                                      'sciflow.parse_module.FuncDetails.__repr__': ( 'parse_module.html#funcdetails.__repr__',
                                                                                     'sciflow/parse_module.py'),
                                      'sciflow.parse_module.FuncLister': ('parse_module.html#funclister', 'sciflow/parse_module.py'),
                                      'sciflow.parse_module.FuncLister.visit_FunctionDef': ( 'parse_module.html#funclister.visit_functiondef',
                                                                                             'sciflow/parse_module.py'),
                                      'sciflow.parse_module.FuncLister.visit_Return': ( 'parse_module.html#funclister.visit_return',
                                                                                        'sciflow/parse_module.py'),
                                      'sciflow.parse_module._convert_return_stmt': ( 'parse_module.html#_convert_return_stmt',
                                                                                     'sciflow/parse_module.py'),
                                      'sciflow.parse_module.extract_module_only': ( 'parse_module.html#extract_module_only',
                                                                                    'sciflow/parse_module.py'),
                                      'sciflow.parse_module.extract_return_stmt': ( 'parse_module.html#extract_return_stmt',
                                                                                    'sciflow/parse_module.py'),
                                      'sciflow.parse_module.extract_return_var_names': ( 'parse_module.html#extract_return_var_names',
                                                                                         'sciflow/parse_module.py'),
                                      'sciflow.parse_module.extract_step_code': ( 'parse_module.html#extract_step_code',
                                                                                  'sciflow/parse_module.py'),
                                      'sciflow.parse_module.extract_steps': ('parse_module.html#extract_steps', 'sciflow/parse_module.py'),
                                      'sciflow.parse_module.parse_step': ('parse_module.html#parse_step', 'sciflow/parse_module.py')},
            'sciflow.run_flow': { 'sciflow.run_flow.check_call_flow': ('run_flow.html#check_call_flow', 'sciflow/run_flow.py'),
                                  'sciflow.run_flow.check_call_flows': ('run_flow.html#check_call_flows', 'sciflow/run_flow.py'),
                                  'sciflow.run_flow.check_is_init': ('run_flow.html#check_is_init', 'sciflow/run_flow.py'),
                                  'sciflow.run_flow.extract_results': ('run_flow.html#extract_results', 'sciflow/run_flow.py'),
                                  'sciflow.run_flow.flow_task': ('run_flow.html#flow_task', 'sciflow/run_flow.py'),
                                  'sciflow.run_flow.iter_param_grid': ('run_flow.html#iter_param_grid', 'sciflow/run_flow.py'),
                                  'sciflow.run_flow.make_shell_cmd': ('run_flow.html#make_shell_cmd', 'sciflow/run_flow.py'),
                                  'sciflow.run_flow.run_flow_async': ('run_flow.html#run_flow_async', 'sciflow/run_flow.py'),
                                  'sciflow.run_flow.run_flows_async': ('run_flow.html#run_flows_async', 'sciflow/run_flow.py'),
                                  'sciflow.run_flow.sample_grid_space': ('run_flow.html#sample_grid_space', 'sciflow/run_flow.py'),
                                  'sciflow.run_flow.sciflow_check_metaflows': ( 'run_flow.html#sciflow_check_metaflows',
                                                                                'sciflow/run_flow.py'),
                                  'sciflow.run_flow.sciflow_check_sagemaker_flows': ( 'run_flow.html#sciflow_check_sagemaker_flows',
                                                                                      'sciflow/run_flow.py'),
                                  'sciflow.run_flow.sciflow_run_metaflows': ('run_flow.html#sciflow_run_metaflows', 'sciflow/run_flow.py'),
                                  'sciflow.run_flow.sciflow_run_sagemaker_flows': ( 'run_flow.html#sciflow_run_sagemaker_flows',
                                                                                    'sciflow/run_flow.py'),
                                  'sciflow.run_flow.search_batches': ('run_flow.html#search_batches', 'sciflow/run_flow.py'),
                                  'sciflow.run_flow.search_flow_grid': ('run_flow.html#search_flow_grid', 'sciflow/run_flow.py')},
            'sciflow.s3_utils': { 'sciflow.s3_utils.S3File': ('s3_utils.html#s3file', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.S3File.__init__': ('s3_utils.html#s3file.__init__', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.S3File.__repr__': ('s3_utils.html#s3file.__repr__', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.S3File.read': ('s3_utils.html#s3file.read', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.S3File.readable': ('s3_utils.html#s3file.readable', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.S3File.seek': ('s3_utils.html#s3file.seek', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.S3File.seekable': ('s3_utils.html#s3file.seekable', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.S3File.size': ('s3_utils.html#s3file.size', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.S3File.tell': ('s3_utils.html#s3file.tell', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.bucket_exists': ('s3_utils.html#bucket_exists', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.delete_dir': ('s3_utils.html#delete_dir', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.download_directory': ('s3_utils.html#download_directory', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.is_valid_bucket': ('s3_utils.html#is_valid_bucket', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.list_bucket': ('s3_utils.html#list_bucket', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.list_s3_subdirs': ('s3_utils.html#list_s3_subdirs', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.load_json': ('s3_utils.html#load_json', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.objects_exist_in_dir': ('s3_utils.html#objects_exist_in_dir', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.put_data': ('s3_utils.html#put_data', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.s3_join': ('s3_utils.html#s3_join', 'sciflow/s3_utils.py'),
                                  'sciflow.s3_utils.upload_directory': ('s3_utils.html#upload_directory', 'sciflow/s3_utils.py')},
            'sciflow.test.test_data_handling': { 'sciflow.test.test_data_handling.pandas': ( 'test/test_data_handling.html#pandas',
                                                                                             'sciflow/test/test_data_handling.py'),
                                                 'sciflow.test.test_data_handling.py_advanced': ( 'test/test_data_handling.html#py_advanced',
                                                                                                  'sciflow/test/test_data_handling.py'),
                                                 'sciflow.test.test_data_handling.scalar': ( 'test/test_data_handling.html#scalar',
                                                                                             'sciflow/test/test_data_handling.py')},
            'sciflow.test.test_export': { 'sciflow.test.test_export.first': ('test/test_export.html#first', 'sciflow/test/test_export.py'),
                                          'sciflow.test.test_export.function': ( 'test/test_export.html#function',
                                                                                 'sciflow/test/test_export.py'),
                                          'sciflow.test.test_export.last': ('test/test_export.html#last', 'sciflow/test/test_export.py'),
                                          'sciflow.test.test_export.preprocess': ( 'test/test_export.html#preprocess',
                                                                                   'sciflow/test/test_export.py'),
                                          'sciflow.test.test_export.train': ('test/test_export.html#train', 'sciflow/test/test_export.py')},
            'sciflow.test.test_export_params': {},
            'sciflow.test.test_module': {'sciflow.test.test_module.first': ('test/test_module.html#first', 'sciflow/test/test_module.py')},
            'sciflow.test.test_multistep': { 'sciflow.test.test_multistep.Topics': ( 'test/test_multistep.html#topics',
                                                                                     'sciflow/test/test_multistep.py'),
                                             'sciflow.test.test_multistep.Topics.__init__': ( 'test/test_multistep.html#topics.__init__',
                                                                                              'sciflow/test/test_multistep.py'),
                                             'sciflow.test.test_multistep.Topics.get_num_topics': ( 'test/test_multistep.html#topics.get_num_topics',
                                                                                                    'sciflow/test/test_multistep.py'),
                                             'sciflow.test.test_multistep.Topics.get_topic_sizes': ( 'test/test_multistep.html#topics.get_topic_sizes',
                                                                                                     'sciflow/test/test_multistep.py'),
                                             'sciflow.test.test_multistep.Topics.get_topics': ( 'test/test_multistep.html#topics.get_topics',
                                                                                                'sciflow/test/test_multistep.py'),
                                             'sciflow.test.test_multistep.Topics.plot_wordcloud': ( 'test/test_multistep.html#topics.plot_wordcloud',
                                                                                                    'sciflow/test/test_multistep.py'),
                                             'sciflow.test.test_multistep.evaluate': ( 'test/test_multistep.html#evaluate',
                                                                                       'sciflow/test/test_multistep.py'),
                                             'sciflow.test.test_multistep.fit': ( 'test/test_multistep.html#fit',
                                                                                  'sciflow/test/test_multistep.py'),
                                             'sciflow.test.test_multistep.get_experiment_segment': ( 'test/test_multistep.html#get_experiment_segment',
                                                                                                     'sciflow/test/test_multistep.py'),
                                             'sciflow.test.test_multistep.get_traffic_text': ( 'test/test_multistep.html#get_traffic_text',
                                                                                               'sciflow/test/test_multistep.py'),
                                             'sciflow.test.test_multistep.get_utterances': ( 'test/test_multistep.html#get_utterances',
                                                                                             'sciflow/test/test_multistep.py'),
                                             'sciflow.test.test_multistep.preprocess': ( 'test/test_multistep.html#preprocess',
                                                                                         'sciflow/test/test_multistep.py'),
                                             'sciflow.test.test_multistep.serve_num_topics': ( 'test/test_multistep.html#serve_num_topics',
                                                                                               'sciflow/test/test_multistep.py'),
                                             'sciflow.test.test_multistep.something': ( 'test/test_multistep.html#something',
                                                                                        'sciflow/test/test_multistep.py')},
            'sciflow.test.test_multistep_no_params': { 'sciflow.test.test_multistep_no_params.Topics': ( 'test/test_multistep_no_params.html#topics',
                                                                                                         'sciflow/test/test_multistep_no_params.py'),
                                                       'sciflow.test.test_multistep_no_params.Topics.__init__': ( 'test/test_multistep_no_params.html#topics.__init__',
                                                                                                                  'sciflow/test/test_multistep_no_params.py'),
                                                       'sciflow.test.test_multistep_no_params.Topics.get_num_topics': ( 'test/test_multistep_no_params.html#topics.get_num_topics',
                                                                                                                        'sciflow/test/test_multistep_no_params.py'),
                                                       'sciflow.test.test_multistep_no_params.Topics.get_topic_sizes': ( 'test/test_multistep_no_params.html#topics.get_topic_sizes',
                                                                                                                         'sciflow/test/test_multistep_no_params.py'),
                                                       'sciflow.test.test_multistep_no_params.Topics.get_topics': ( 'test/test_multistep_no_params.html#topics.get_topics',
                                                                                                                    'sciflow/test/test_multistep_no_params.py'),
                                                       'sciflow.test.test_multistep_no_params.Topics.plot_wordcloud': ( 'test/test_multistep_no_params.html#topics.plot_wordcloud',
                                                                                                                        'sciflow/test/test_multistep_no_params.py'),
                                                       'sciflow.test.test_multistep_no_params.evaluate': ( 'test/test_multistep_no_params.html#evaluate',
                                                                                                           'sciflow/test/test_multistep_no_params.py'),
                                                       'sciflow.test.test_multistep_no_params.fit': ( 'test/test_multistep_no_params.html#fit',
                                                                                                      'sciflow/test/test_multistep_no_params.py'),
                                                       'sciflow.test.test_multistep_no_params.get_experiment_segment': ( 'test/test_multistep_no_params.html#get_experiment_segment',
                                                                                                                         'sciflow/test/test_multistep_no_params.py'),
                                                       'sciflow.test.test_multistep_no_params.get_traffic_text': ( 'test/test_multistep_no_params.html#get_traffic_text',
                                                                                                                   'sciflow/test/test_multistep_no_params.py'),
                                                       'sciflow.test.test_multistep_no_params.get_utterances': ( 'test/test_multistep_no_params.html#get_utterances',
                                                                                                                 'sciflow/test/test_multistep_no_params.py'),
                                                       'sciflow.test.test_multistep_no_params.preprocess': ( 'test/test_multistep_no_params.html#preprocess',
                                                                                                             'sciflow/test/test_multistep_no_params.py'),
                                                       'sciflow.test.test_multistep_no_params.serve_num_topics': ( 'test/test_multistep_no_params.html#serve_num_topics',
                                                                                                                   'sciflow/test/test_multistep_no_params.py'),
                                                       'sciflow.test.test_multistep_no_params.something': ( 'test/test_multistep_no_params.html#something',
                                                                                                            'sciflow/test/test_multistep_no_params.py')},
            'sciflow.utils': { 'sciflow.utils.chunks': ('utils.html#chunks', 'sciflow/utils.py'),
                               'sciflow.utils.find_default_export': ('utils.html#find_default_export', 'sciflow/utils.py'),
                               'sciflow.utils.get_flow_path': ('utils.html#get_flow_path', 'sciflow/utils.py'),
                               'sciflow.utils.get_module_name': ('utils.html#get_module_name', 'sciflow/utils.py'),
                               'sciflow.utils.indent_multiline': ('utils.html#indent_multiline', 'sciflow/utils.py'),
                               'sciflow.utils.lib_path': ('utils.html#lib_path', 'sciflow/utils.py'),
                               'sciflow.utils.load_nb': ('utils.html#load_nb', 'sciflow/utils.py'),
                               'sciflow.utils.load_nb_module': ('utils.html#load_nb_module', 'sciflow/utils.py'),
                               'sciflow.utils.prepare_env': ('utils.html#prepare_env', 'sciflow/utils.py'),
                               'sciflow.utils.run_shell_cmd': ('utils.html#run_shell_cmd', 'sciflow/utils.py'),
                               'sciflow.utils.titleize': ('utils.html#titleize', 'sciflow/utils.py')}}}
