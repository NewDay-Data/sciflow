# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/test/test_data_handling.ipynb (unless otherwise specified).

__all__ = ['int_param', 'float_param', 'str_param', 'input_path', 'model_path', 'dict_param', 'list_param', 'ones',
           'text', 'series_param', 'df_param', 'scalar', 'py_advanced', 'pandas']

# Cell

from pathlib import Path
from typing import Any, Dict, List

import numpy as np
import pandas as pd

# Cell


int_param = 3
float_param = 1.1
str_param = "Sciflow ðŸ”¬"
input_path = Path(".").resolve()
model_path = Path(".").resolve().parent
dict_param = {"a": {"b": {"c": "abc"}}, "another_key": [1, 2, 3]}
list_param = [i for i in range(10 ** 4)]
ones = np.ones(10 ** 7)
text = np.repeat("some string that takess space and more of it", 10 ** 7)
series_param = pd.Series(text)
df_param = pd.DataFrame({"a": ones, "b": ones, "c": ones, "d": text})

# step:scalar


def scalar(int_param: int, float_param: float, str_param: str):
    print((int_param, float_param, str_param))
    return int_param, float_param, str_param

# step:py_advanced


def py_advanced(input_path: Path, list_param: List[int], dict_param: Dict[str, Any]):
    print(input_path)
    print(list_param[:10])
    print(dict_param)

# step:pandas


def pandas(series: pd.Series, df: pd.DataFrame):
    print(series.shape)
    print(df.shape)