# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/packaging.ipynb (unless otherwise specified).

__all__ = ['determine_dependencies']

# Cell

import os
import subprocess
import sys
from pathlib import Path
from typing import List

from nbdev.export import Config

# Cell


def determine_dependencies(generated_pip_file_name: str = "requirements-generated.txt"):
    try:
        pass
    except:
        print("Pigar dependency is not installed - not able to determine dependencies")
        return
    lib_path = Config().path("lib_path")
    project_root = lib_path.resolve().parent
    command = "pigar"
    args = ["-p", generated_pip_file_name, "-P", lib_path]

    output = subprocess.run(
        [sys.executable, "-m", command, *(str(i).strip() for i in args)],
        stderr=subprocess.PIPE,
        stdout=subprocess.PIPE,
        cwd=project_root,
        env=None,
        universal_newlines=True,
    )

    output_code = output.returncode

    output.stdout
    err = output.stderr

    if output_code != 0:
        raise EnvironmentError(err)